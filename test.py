# a = '10'
# print(type(a))

# s = bytearray('hello \xab', encoding='utf-8')
# for x in s:
#     print(x)

# a = 'hello'
# b = bytearray(a, encoding='utf8')
# for y in b:
#     print(y)


# bitab = [1, 2, 3, 4]
# # print(bitab[-1])
# bitab = bitab[:3]
# for color in bitab:
#     print("FOR")
#     print(color)
#     print(color & 1)


# def check_list():
#     # encrypted = ['µ', '¯', 'Ï', 'n', '\x86', 'Ë', '\x92', '\x9a', '`', '\x01', '"', '_', '\x1c', '\r', '\x89', '\x90', '\x1a', 'C', '\x93', 'î', '(', '&', 'U', 'Ò', 'I', ';', '\x15', 'V', '¡', 'ü', 'c', 'ý', 'Z', '1', '÷', 'È', ']', 'î', 'a', '9', '6', '²', '©', '\x06', 'à', '-', 'Û', 'm', '\t', 'H', '\x94', '\x80', '\x01', '2', '\x14', '\x96', '³', '\xad', '·', 'Þ', 'ï', '\x93', 'ñ', '\x8a', '%', '\x1b', 'à', 'Ô', '0', '0', 'Û', 'Y', '®', 'þ', 'ë', 'ý', 'ÿ', 'à', '»', '\x1c', 'A', '\n', 'Ð', '-', '\x94', '\x07', 'N', 'Ï', 'û', '\x9f', '\x8d', 'È', 'ã', '\x90', '\t', '$', 'm', '·', '\x1d', '\x8e', '9', '[', '½', 'Â', 'ü', '\x1d', 'ñ', '\x80', '·', '\x80', '\x00', '\x1c', '?', 'ø', 'Q', 'µ', 'T', 'Q', 'H', 'i', "'", 'ö', 'Ì', 'z', 'þ', '\x1b', '|', 'q', 'À', '\x1c', 'r', '\x01', '-', '·', '"', 'ç', 'f', '\x89', 'ä', '.', '½', '\x91', 'ø', 'ª', 'ù', '+', 'U', '\x90', '\x98', 'ä', 'ù', '·', '$', 'm', '¶', 'Û', 'Ø', 'í', '\x8d', 'Ø', '\x92', 'I', 'ï', 'ÿ', 'ÿ', 'ü', '\x00', '\x01', '\t', 'U', 'R', '¶', 'Û', 'R', '\x80', '\x0f', 'ÿ', '\x00', '\x0f', 'Ê', '\x96', 'F', 'ß', 'H', '\x9d', 'M', 'A', 'U', 'm', 'µ', '%', 'R', 'Ú', 'Ô', '\x90', '¾', 'Ô', '\xa0', 'õ', '\x08', 'ù', 'Æ', '¤', '{', 'Í', 'Æ', '+', '\x17', '¶', '\x7f', 'À', '+', '\x9f', 'l', '\x00', '\x05', '`', '\x05', 'Z', 'º', 'O', 'Ù', 'Ú', 'F', 'Ò', 'I', '+', 'l', 'û', 'm', '¶', 'Û', 'm', '·', 'û', 'm', '¶', 'Û', 'm', '¶', 'Û', 'm', '¶', 'Û', 'm', '·', 'û', 'm', '¶', 'Û', 'm', '·', 'û', 'm', '¶', 'Û', 'm', '¶', 'Û', 'm', '¶', 'Û', 'm', '¶', 'Û', 'm', '¶', 'Û', 'm', '¶', 'Û', 'm', '¶', 'Û', 'm', '·', 'Ø', '\x89', '%', 'N', '_', '[', '·', '«', 'â', 'L', 'Å', 'n', 'l', '¸', '©', '¦', '?', 'À', '®', '\x8e', 'ú', '±', '±', 'Ô', 'á', '¶', 'É', 'n', 'P', '¦', 'ø', '\x12', '¾', '%', '¤', '¿', ';', '¾', 'T', 'î', 'Û', 'i', '\x83', 'ÿ', 'À', 'ÿ', 'ö', 'Í', 'E', '¶', 'Û', 'n', 'K', 'i', '¿', 'þ', 'ß', 'q', '\x80', 'ó', '\x1b', 'G', '\x02', '_', 'Õ', 'U', '\x88', '\x9f', '\x8a', '\x8f', 'å', '#', '\x9c', '\x9c', 'v', '8', '\x96', 'J', 'n', 'f', 'a', '\x97', 'ÿ', 'ä', '\x81', 'J', '\x92', 'I', '$', '\x9a', '\x95', '+', '`', '¶', 'Ë', 'A', 'Ø', '\x00', '?', '\x00', '\x00', '\x12', '\x83', 'm', '¶', 'Ø', '\x9d', '²', 'þ', 'G', '$', 'm', '¶', 'Û', 'Ú', 'I', '\x12', 'n', 'F', '¨', 'ù', '2', 'È', '$', '\\', '7', '´', '¯', 'I', 'Z', 'ß', 'À', '\x96', 'Û', 'i', 'Ê', 'Û', '¶', 'O', 'ð', '$', 'd', '\x9d', 'w', 'Ð', '\t', '\t', '\n', 'I', '\x00', '8', 'ì', 'I', '$', '\x92', 's', '\r', '¹', '$', 'n', '7', '\x1c', 'À', '²', 'ï', 'j', '\x06', '6', '0', 'c', '\x89', '¥', '°', '\t', 'Í', '¹', '\x1b', 'o', 'g', '£', '9', '.', 'Ý', '\x15', ' ', '\x00', '^', '×', 'W', 'Y', 'j', '\x17', '\x9d', '\x95', 'â', '\x86', '\x92', '\x83', '¼', '(', '1', 'á', '_', 'ì', '9', 'Ä', 'i', 'Ù', '·', '\x0f', '¨', "'", 'É', '®', 'O', '\x84', '\x15', '¨', '\x0b', 'ç', '~', 'ç', '\x98', '·', '¾', '¶', 'Ý', '¶', '\x9f', 'ß', 'ÿ', '\x00', '\x0f', 'ÿ', '\x00', '\x01', '÷', 'ã', 'ÿ', 'þ', 'Ä', '5', 'j', '©', ':']
#     secret = ['T', 'H', 'I', 'S', '_', 'I', 'S', '_', 'A', '_', 'S', 'E', 'C', 'R', 'E', 'T', '_', 'M', 'E', 'S', 'S',
#               'A', 'G', 'E']
#     msg = ['T', 'A', 'Z']
#     check = all(item in secret for item in msg)
#     if check:
#         print("FOUND ITEMS")
#     else:
#         print("NOT FOUND")
#
#
# check_list()
import math
import os


def loop_folder():
    temp_folder = '/Users/tchiringlama/extraction/video_frames'
    for file in os.listdir(temp_folder):
        print(file)

    # for a in temp_folder:
    #     f_name = "{}.jpg".format(a)
    #     print(f_name)


def split_string(s_str, count=10):
    per_c = math.ceil(len(s_str) / count)
    c_cout = 0
    out_str = ''
    split_list = []
    for s in s_str:
        out_str += s
        c_cout += 1
        if c_cout == per_c:
            split_list.append(out_str)
            out_str = ''
            c_cout = 0
    if c_cout != 0:
        split_list.append(out_str)
    print(split_list)
    return split_list


if __name__ == '__main__':
    split_string_list = split_string('testingstring')
    for i in range(0, len(split_string_list)):
        print(split_string_list[i])
    loop_folder()
